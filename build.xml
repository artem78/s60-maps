<?xml version="1.0"?>
<project name="S60Maps" default="make_sis">
	<!-- Properties: -->
	<property name="sources_dir" location="sources"/>
	<!--<echo>${java.io.tmpdir}</echo>-->
	<tempfile property="temp_dir" destDir="${java.io.tmpdir}" prefix="s60maps_build"/>
	<!--<echo>Temp dir = ${temp_dir}</echo>-->
	<property name="temp_repo_dir" location="${temp_dir}/s60-maps"/>


	<!-- Targets: -->
	<target name="init">
		<exec executable="devices" failonerror="true">
			<arg value="-setdefault" />
			<arg value="@S60_3rd_FP1:com.nokia.s60" />
		</exec>
	</target>
	
	<target name="clean" depends="init">
		<!--<delete dir="${temp_dir}"/>-->
		<delete file="sis/S60Maps.sis" />
		<delete file="sis/S60Maps.sisx" />
		<!--<delete dir="sis" includes="*.sis, *.sisx" />-->
		
		<exec executable="${basedir}/group/abld.bat" dir="group" failonerror="true" failifexecutionfails="false">
			<arg value="reallyclean" />
		</exec>
		<exec executable="bldmake" dir="group" failonerror="true">
			<arg value="clean" />
		</exec>
	</target>
	
	<target name="compile" depends="clean">
		<exec executable="bldmake" dir="group" failonerror="true">
			<arg value="bldfiles" />
		</exec>
		<exec executable="${basedir}/group/abld.bat" dir="group" failonerror="true">
			<arg value="build" />
			<arg value="gcce" />
			<arg value="urel" />
		</exec>
	</target>
	
	<target name="make_sis" depends="compile" description="Create sis(x) package file">
		<property name="sis_dir" location="sis/" />
		<exec executable="git" outputproperty="version" failonerror="true">
			<arg value="describe"/>
			<arg value="--dirty"/>
		</exec>
		<echo>Current version: ${version}</echo>
	
		<exec executable="makesis" dir="sis" failonerror="true">
			<arg value="-v" /> <!-- verbose -->
			<arg value="C:\Symbian\9.2\S60_3rd_FP1\epoc32\build\Symbian\Carbide\workspace\s60-maps\group\_resolvedS60Maps.pkg" />
			<arg value="${sis_dir}/S60Maps.sis" />
		</exec>
		
		<move file="${sis_dir}/S60Maps.sis" tofile="${sis_dir}/S60Maps_${version}.sis" overwrite="true" />
		<!--<move file="${sis_dir}/S60Maps.sisx" tofile="${sis_dir}/S60Maps_${version}.sisx" overwrite="true" />-->
	</target>
	
	<target name="source_zip" depends="clean" description="Makes complete archive with sources including submodules">
		<mkdir dir="${temp_dir}"/>
		<mkdir dir="${sources_dir}"/>
		<exec executable="git" dir="${sources_dir}" failonerror="true">
			<arg value="clone"/>
			<arg value="--recurse-submodules"/>
			<arg value="git@github.com:artem78/s60-maps.git"/>
			<arg value="${temp_repo_dir}"/>
		</exec>
		<!-- Get latest annotated tag (release) -->
		<exec executable="git" outputproperty="tag_name" dir="${temp_repo_dir}" failonerror="true">
			<arg value="describe"/>
			<arg value="--abbrev=0"/>
		</exec>
		<echo>Latest program version: ${tag_name}</echo>
		<exec executable="git" dir="${temp_repo_dir}" failonerror="true">
			<arg value="checkout"/>
			<arg value="${tag_name}"/>
		</exec>
		<zip destfile="${sources_dir}/S60Maps_full_sources_${tag_name}.zip" basedir="${temp_dir}"
			excludes="**/.mailmap" level="9"/><!-- note: git dirs and files will be excluded by default -->
		<delete dir="${temp_dir}" />
	</target>
	
	<!--<target name="rename_sis" depends="make_sis" description="Copy exists *.sis(x) files (should be manually build first in IDE) with adding current version to filename">
		<property name="sis_dir" location="sis/" />
		<exec executable="git" outputproperty="version" failonerror="true">
			<arg value="describe"/>
			<arg value="- - dirty"/>
		</exec>
		<echo>Current version: ${version}</echo>
		<copy file="${sis_dir}/S60Maps.sis" tofile="${sis_dir}/S60Maps_${version}.sis" overwrite="true" />
		<copy file="${sis_dir}/S60Maps.sisx" tofile="${sis_dir}/S60Maps_${version}.sisx" overwrite="true" />
	</target>-->
</project>

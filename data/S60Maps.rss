/*
============================================================================
 Name		: S60Maps.rss
 Author	  : artem78
 Copyright   : 
 Description : This file contains all the resources for the S60Maps.
============================================================================
*/
//  RESOURCE IDENTIFIER
NAME S60M	// 4 letter ID


//  INCLUDES
#include <eikon.rh>
#include <eikctl.rsg>
#include <avkon.rsg>
#include <avkon.rh>
#include <appinfo.rh>
#include "S60Maps.hrh"
#include "S60Maps.rls"
#include "S60Maps.loc"


// Constants

#define KPosLmMaxTextFieldLength 255 // from epos_landmarks.h



//  RESOURCE DEFINITIONS
// -----------------------------------------------------------------------------
//
//	Define the resource file signature
//	This resource should be empty.
//
// -----------------------------------------------------------------------------
//
RESOURCE RSS_SIGNATURE
	{
	}

// -----------------------------------------------------------------------------
//
//	Default Document Name
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_default_document_name
	{
	buf="S60M";
	}

// -----------------------------------------------------------------------------
//
//	Define default menu and CBA key.
//
// -----------------------------------------------------------------------------
//
RESOURCE EIK_APP_INFO
	{
	cba = R_AVKON_SOFTKEYS_OPTIONS_EXIT;
	}


// Map view
RESOURCE AVKON_VIEW r_map_view
	{
	menubar = r_menubar;
	//cba = R_AVKON_SOFTKEYS_OPTIONS_EXIT;
	}

// Settings view
RESOURCE AVKON_VIEW r_settings_view
	{
	cba = /*R_AVKON_SOFTKEYS_OPTIONS_BACK*/ R_AVKON_SOFTKEYS_BACK;
	}


// -----------------------------------------------------------------------------
//
//   r_menubar
//   Main menubar
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_BAR r_menubar
	{
	titles =
		{
		MENU_TITLE { menu_pane = r_menu; }
		};
	}


// -----------------------------------------------------------------------------
//
//   r_menu
//   Menu for "Options"
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_menu
	{
	items =
		{
		// added the new Options menu command here
		MENU_ITEM
				{
				command = EFindMe;
				txt = qtn_find_me;
				//flags = EEikMenuItemCheckBox;
				},
		MENU_ITEM
				{
				//command = ...;
				txt = qtn_goto;
				cascade = r_submenu_goto;
				},
		// Probably I will add help in the future
		/*MENU_ITEM
				{
				command = EHelp;
				txt = qtn_help;
				},*/
		MENU_ITEM
				{
				//command = ...;
				txt = qtn_tile_providers_title;
				cascade = r_submenu_tile_providers;
				},
		MENU_ITEM
				{
				//command = ...;
				txt = qtn_landmarks;
				cascade = r_submenu_landmarks;
				},
		MENU_ITEM
				{
				command = ESearch;
				txt = qtn_search;
				},
		MENU_ITEM
				{
				//command = ...;
				txt = qtn_service_title;
				cascade = r_submenu_service;
				},
		MENU_ITEM
				{
				command = ESettings;
				txt = qtn_settings;
				},
		MENU_ITEM
				{
				command = EAbout;
				txt = qtn_about;
				},
		MENU_ITEM
				{
				command = EAknSoftkeyExit;
				txt = qtn_exit;
				}
		};
	}

// Go to submenu
RESOURCE MENU_PANE r_submenu_goto
	{
	items =
		{
		MENU_ITEM
			{
			command = EGotoLandmark;
			txt = qtn_landmark;
			},
		MENU_ITEM
			{
			command = EGotoCoordinate;
			txt = qtn_coordinate;
			}
		};
	}

// Tile providers submenu
RESOURCE MENU_PANE r_submenu_tile_providers
	{
	items =
		{}; // Will be filled at runtime
	}

// Landmarks submenu
RESOURCE MENU_PANE r_submenu_landmarks
	{
	items =
		{
		MENU_ITEM
			{
			flags = EEikMenuItemCheckBox;
			command = EToggleLandmarksVisibility;
			txt = qtn_display;
			},
		MENU_ITEM
			{
			command = ECreateLandmark;
			txt = qtn_create;
			},
		MENU_ITEM
			{
			command = ERenameLandmark;
			txt = qtn_rename;
			},
		MENU_ITEM
			{
			command = EDeleteLandmark;
			txt = qtn_delete;
			}
		};
	}

// Service submenu
RESOURCE MENU_PANE r_submenu_service
	{
	items =
		{
		MENU_ITEM
			{
			command = EReloadVisibleArea;
			txt = qtn_reload_visible_area;
			},
		MENU_ITEM
			{
			command = ETilesCacheStats;
			txt = qtn_tiles_cache_stats;
			},
		MENU_ITEM
			{
			command = EResetTilesCache;
			txt = qtn_reset_tiles_cache;
			}
		};
	}

// -----------------------------------------------------------------------------
//
// Dialog resources.
//
// -----------------------------------------------------------------------------
//

// General query dialog
RESOURCE DIALOG r_query_dialog
	{
	flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
	buttons = R_AVKON_SOFTKEYS_OK_EMPTY;
	items=
		{
		DLG_LINE 
			{
			type = EAknCtPopupHeadingPane;
			id = EAknMessageQueryHeaderId;
			itemflags = EEikDlgItemNonFocusing;
			control = AVKON_HEADING
				{
				};
			},
		DLG_LINE
			{
			type = EAknCtMessageQuery;
			id = EAknMessageQueryContentId;
			control = AVKON_MESSAGE_QUERY
				{
				};
			}
		};
	}


// General confirmation dialog
RESOURCE DIALOG r_confirm_dialog
	{
	flags = EGeneralQueryFlags;
	buttons = R_AVKON_SOFTKEYS_YES_NO;
	items =
		{
		/*DLG_LINE 
			{
			type = EAknCtPopupHeadingPane;
			id = EAknMessageQueryHeaderId;
			itemflags = EEikDlgItemNonFocusing;
			control = AVKON_HEADING
				{
				};
			},*/
		DLG_LINE
			{
			type = EAknCtQuery;
			id = EGeneralQuery;
			control = AVKON_CONFIRMATION_QUERY
				{
				layout = EConfirmationQueryLayout;
				};
			}
		};
	}

// General progress dialog
/*RESOURCE DIALOG r_progress_dialog
    {
    flags = EAknProgressNoteFlags;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    //buttons = R_AVKON_SOFTKEYS_EMPTY;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            //id = EProgressDialog;    ???
            id = EClearCacheProgressDialog;
            control = AVKON_NOTE
                {
                layout = EProgressLayout;
                singular_label = qtn_wait;
                //plural_label = ...;
                //animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
    }*/

// General wait dialog
RESOURCE DIALOG r_wait_dialog
	{
	flags = EAknWaitNoteFlags /*| EEikDialogFlagNotifyEsc*/;
	buttons = R_AVKON_SOFTKEYS_CANCEL;
	items =
		{
		DLG_LINE
			{
			type = EAknCtNote;
			id = ECacheClearingWaitDialog;
			control= AVKON_NOTE
				{
				layout = EWaitLayout;
				singular_label = qtn_wait;
				animation = R_QGN_GRAF_WAIT_BAR_ANIM;
				};
			}
		};
	}

// New landmark name input dualog
RESOURCE DIALOG r_landmark_name_input_query
  {
  flags = EGeneralQueryFlags;
  buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
  items =
    {
    DLG_LINE
      {
      type = EAknCtQuery;
      id = EGeneralQuery;
      control = AVKON_DATA_QUERY
        {
        layout = EDataLayout;
        label = qtn_input_name;
        control = EDWIN
          {
          flags = EEikEdwinNoHorizScrolling | EEikEdwinResizable;
//        width = AKNTAQUERY_EDWIN_WIDTH;
//        maxlength = AKNTAQUERY_EDWIN_MAXLENGTH;
          maxlength = KPosLmMaxTextFieldLength;
          // added to limit expanding in forms. 
          // If you want full screen use 6 here
//        max_view_height_in_lines = AKNEXQUERY_EDWIN_LINES; 
          // if you have the line above, you must have this. 
          // It's calculable from LAF
          base_line_delta = 21; 
          };
        };
      }
    };
  }

// List query dialog for landmarks
RESOURCE DIALOG r_landmarks_query_dialog
	{
	flags = EAknDialogSelectionList;
	buttons = R_AVKON_SOFTKEYS_SELECT_CANCEL;
	items =
		{
		DLG_LINE
			{
			type = EAknCtSingleListBox;
			id = ESelectionListControl;
			control = LISTBOX
				{
				flags = EAknListBoxSelectionList;
				};
			},

		DLG_LINE
			{
			itemflags = EEikDlgItemNonFocusing;
			id = EFindControl;
			type = EAknCtSelectionListFixedFind /*EAknCtSelectionListPopupFind*/;
			}
		};
	}

RESOURCE MENU_BAR r_landmarks_query_dialog_menubar
	{
	titles =
		{
		MENU_TITLE { menu_pane = R_AVKON_MENUPANE_SELECTION_LIST; } 
		};
	};

// Location query dialog
RESOURCE DIALOG r_location_query_dialog
	{
	flags=EGeneralQueryFlags;
	buttons=R_AVKON_SOFTKEYS_OK_CANCEL;
	items=
		{
		DLG_LINE
			{
			type=EAknCtMultilineQuery;
			id=EMultilineFirstLine;
			control=AVKON_DATA_QUERY
				{
				layout=EMultiDataFirstLocationEd;
				label=qtn_latitude;
				control=LATITUDE_EDITOR
					{
					flags = ELocationEdFlagLatitude;
					latlongresourceid = R_EIK_LATITUDE_AND_LONGITUDE;
					};
				};
			},
		DLG_LINE
			{
			type=EAknCtMultilineQuery;
			id=EMultilineSecondLine;
			control=AVKON_DATA_QUERY
				{
				layout=EMultiDataSecondLocationEd;
				label=qtn_longitude;
				control=LONGITUDE_EDITOR
					{
					flags = ELocationEdFlagLongitude;
					latlongresourceid = R_EIK_LATITUDE_AND_LONGITUDE;
					};
				};
			}
		};
	}


// -----------------------------------------------------------------------------
//
// Resources for messages.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF32 r_caption_string { buf=qtn_caption_string; }

RESOURCE /*TBUF32*/ TBUF r_map_cache_stats_dialog_title { buf=qtn_tiles_cache_stats; }
//RESOURCE TBUF32 r_confirm_reset_tiles_cache_dialog_title { buf=qtn_confirm_reset_tiles_cache_dialog_title; }
RESOURCE TBUF r_confirm_reset_tiles_cache_dialog_text { buf=qtn_confirm_reset_tiles_cache_dialog_text; }
RESOURCE TBUF32 r_about_dialog_title { buf=qtn_about_dialog_title; }
RESOURCE TBUF r_about_dialog_text { buf=qtn_about_dialog_text; }
RESOURCE TBUF r_about_dialog_git_text { buf=qtn_about_dialog_git_text; }
//RESOURCE TBUF32 r_confirm_exit_dialog_title { buf=qtn_confirm_exit_dialog_title; }
RESOURCE TBUF r_confirm_exit_dialog_text { buf=qtn_confirm_exit_dialog_text; }
RESOURCE TBUF r_done { buf=qtn_done; }
RESOURCE TBUF r_stats_line { buf=qtn_stats_line; }
RESOURCE TBUF r_stats_total { buf=qtn_stats_total; }
RESOURCE TBUF r_positioning_disabled { buf=qtn_positioning_disabled; }
//RESOURCE TBUF r_wait { buf=qtn_wait; }
RESOURCE TBUF r_meters_unit_short { buf=qtn_meters_unit_short; }
RESOURCE TBUF r_kilometers_unit_short { buf=qtn_kilometers_unit_short; }
RESOURCE TBUF r_landmarks { buf=qtn_landmarks; }
//RESOURCE TBUD r_display { buf=qtn_display; }
//RESOURCE TBUD r_create { buf=qtn_create; }
RESOURCE TBUF r_input_name { buf=qtn_input_name; }
//RESOURCE TBUF r_rename { buf=qtn_rename; }
//RESOURCE TBUF r_delete { buf=qtn_delete; }
RESOURCE TBUF r_confirm_landmark_deletion { buf=qtn_confirm_landmark_deletion; }
RESOURCE TBUF r_settings_title { buf=qtn_settings; }

// Language names
RESOURCE TBUF r_lang_english_name	{ buf=qtn_lang_english_name; }
RESOURCE TBUF r_lang_spanish_name	{ buf=qtn_lang_spanish_name; }
RESOURCE TBUF r_lang_galician_name	{ buf=qtn_lang_galician_name; }
RESOURCE TBUF r_lang_portuguese_name	{ buf=qtn_lang_portuguese_name; }
RESOURCE TBUF r_lang_russian_name	{ buf=qtn_lang_russian_name; }
RESOURCE TBUF r_lang_polish_name	{ buf=qtn_lang_polish_name; }
RESOURCE TBUF r_lang_hebrew_name	{ buf=qtn_lang_hebrew_name; }
RESOURCE TBUF r_lang_lat_am_spanish_name	{ buf=qtn_lang_lat_am_spanish_name; }
RESOURCE TBUF r_lang_ukrainisn_name	{ buf=qtn_lang_ukrainisn_name; }


// ---------------------------------------------------------------------------- 
//
// r_localisable_app_info
//
// ---------------------------------------------------------------------------- 
//
RESOURCE LOCALISABLE_APP_INFO r_localisable_app_info
	{
	short_caption = qtn_caption_string;
	caption_and_icon = 
	CAPTION_AND_ICON_INFO
		{
		caption = qtn_caption_string;

		number_of_icons = 1;
		icon_file = "\\resource\\apps\\S60Maps_0xED689B88.mif";
		};
	}

/*
 * Settings
 * 
 */

RESOURCE AVKON_SETTING_ITEM_LIST r_setting_item_list
	{
	title = qtn_settings;
	
	items = 
		{
		AVKON_SETTING_ITEM
			{
			identifier = ESettingLanguage;
			setting_page_resource = r_language_setting_page;
			associated_resource = r_popup_setting_language_texts;
			name = qtn_language;
			},
	    AVKON_SETTING_ITEM
	    	{
			identifier = ESettingShowSignalIndicator;
			setting_page_resource = r_show_signal_indicator_setting_page;
			associated_resource = r_popup_setting_show_signal_indicator_texts;
			name = qtn_signal_indicator;
	    	},
	    AVKON_SETTING_ITEM
	    	{
			identifier = ESettingSignalIndicatorType;
			setting_page_resource = r_signal_indicator_type_setting_page;
			associated_resource = r_popup_setting_signal_indicator_type_texts;
			name = qtn_signal_indicator_type;
	    	},
		AVKON_SETTING_ITEM
			{
			identifier = ESettingShowScaleBar;
			setting_page_resource = r_show_scale_bar_setting_page;
			associated_resource = r_popup_setting_show_scale_bar_texts;
			name = qtn_scale_bar;
			},
		AVKON_SETTING_ITEM
			{
			identifier = ESettingUseHttpsProxy;
			setting_page_resource = r_use_https_proxy_setting_page;
			associated_resource = r_popup_setting_use_https_proxy_texts;
			name = qtn_use_https_proxy;
			},
		AVKON_SETTING_ITEM
			{
			identifier = ESettingHttpsProxyUrl;
			setting_page_resource = r_https_proxy_url_setting_page;
			name = qtn_https_proxy_url;
			},
		AVKON_SETTING_ITEM
			{
			identifier = ESettingUseDiskCache;
			setting_page_resource = r_use_disk_cache_setting_page;
			associated_resource = r_popup_setting_use_disk_cache_texts;
			name = qtn_use_disk_cache;
			}
		};
	}

	

// Language setting

RESOURCE AVKON_SETTING_PAGE r_language_setting_page
	{
	//number = 0;  EAknSettingPageNoOrdinalDisplayed 
	label = qtn_language;
	type = EAknCtPopupSettingList;
	editor_resource_id = r_language_popup_setting_list;
	}

RESOURCE POPUP_SETTING_LIST r_language_popup_setting_list
	{
	flags = 0;
	}

RESOURCE AVKON_POPUP_SETTING_TEXTS r_popup_setting_language_texts
	{
	//flags = 0;
	setting_texts_resource   = r_language_texts1;
	popped_up_texts_resource = r_language_texts2;
	}

RESOURCE ARRAY r_language_texts1
	{
	items =
		{
		// Will be filled at runtime
		};
	}

RESOURCE ARRAY r_language_texts2
	{
	items =
		{
		// Will be filled at runtime
		};
	}


// Show signal indicator setting

RESOURCE AVKON_SETTING_PAGE r_show_signal_indicator_setting_page
    {   
    number = 0;
    label = qtn_signal_indicator;
    type = EAknCtPopupSettingList;
    }

RESOURCE AVKON_POPUP_SETTING_TEXTS r_popup_setting_show_signal_indicator_texts
    {
    flags = 0;
    setting_texts_resource = r_show_signal_indicator_texts;
    }

RESOURCE ARRAY r_show_signal_indicator_texts
    {
    items =
        {
        AVKON_ENUMERATED_TEXT { value=1; text = qtn_show; },
        AVKON_ENUMERATED_TEXT { value=0; text = qtn_hide; }
        };
    }
	

// Signal indicator type setting

RESOURCE AVKON_SETTING_PAGE r_signal_indicator_type_setting_page
    {   
    number = 0;
    label = qtn_signal_indicator_type;
    type = EAknCtPopupSettingList;
    }

RESOURCE AVKON_POPUP_SETTING_TEXTS r_popup_setting_signal_indicator_type_texts
    {
    flags = 0;
    setting_texts_resource = r_signal_indicator_type_texts;
    }

RESOURCE ARRAY r_signal_indicator_type_texts
    {
    items =
        {
        AVKON_ENUMERATED_TEXT { value=0; text = qtn_signal_indicator_general_type; },
        AVKON_ENUMERATED_TEXT { value=1; text = qtn_signal_indicator_per_satellite_type; }
        };
    }


// Show scale bar setting

RESOURCE AVKON_SETTING_PAGE r_show_scale_bar_setting_page
    {   
    number = 0;
    label = qtn_scale_bar;
    type = EAknCtPopupSettingList;
    }

RESOURCE AVKON_POPUP_SETTING_TEXTS r_popup_setting_show_scale_bar_texts
    {
    flags = 0;
    setting_texts_resource = r_show_scale_bar_texts;
    }

RESOURCE ARRAY r_show_scale_bar_texts
    {
    items =
        {
        AVKON_ENUMERATED_TEXT { value=1; text = qtn_show; },
        AVKON_ENUMERATED_TEXT { value=0; text = qtn_hide; }
        };
    }


// Show use https proxy setting

RESOURCE AVKON_SETTING_PAGE r_use_https_proxy_setting_page
    {   
    number = 0;
    label = qtn_use_https_proxy;
    type = EAknCtPopupSettingList;
    }

RESOURCE AVKON_POPUP_SETTING_TEXTS r_popup_setting_use_https_proxy_texts
    {
    flags = 0;
    setting_texts_resource = r_use_https_proxy_texts;
    }

RESOURCE ARRAY r_use_https_proxy_texts
    {
    items =
        {
        AVKON_ENUMERATED_TEXT { value=1; text = qtn_enabled; },
        AVKON_ENUMERATED_TEXT { value=0; text = qtn_disabled; }
        };
    }


// Show https proxy url setting
RESOURCE EDWIN r_https_proxy_url_text_editor
	{
	width = 5;
	lines = 1;
	maxlength = 256;
	}

RESOURCE AVKON_SETTING_PAGE r_https_proxy_url_setting_page
	{
	type = EEikCtEdwin;
	label = qtn_https_proxy_url;
	editor_resource_id = r_https_proxy_url_text_editor;
	}


// Show use disk cache setting

RESOURCE AVKON_SETTING_PAGE r_use_disk_cache_setting_page
    {   
    number = 0;
    label = qtn_use_disk_cache;
    type = EAknCtPopupSettingList;
    }

RESOURCE AVKON_POPUP_SETTING_TEXTS r_popup_setting_use_disk_cache_texts
    {
    flags = 0;
    setting_texts_resource = r_use_disk_cache_texts;
    }

RESOURCE ARRAY r_use_disk_cache_texts
    {
    items =
        {
        AVKON_ENUMERATED_TEXT { value=1; text = qtn_enabled; },
        AVKON_ENUMERATED_TEXT { value=0; text = qtn_disabled; }
        };
    }


// End of File
